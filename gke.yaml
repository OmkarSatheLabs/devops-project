apiVersion: apps/v1
kind: Deployment
metadata: 
  name: gcp-devops-gke
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gcp
  template:
    metadata:
      labels:
        app: gcp
    spec:
      containers:
      - name: gcp-devops-gke
        image: 'gcr.io/PROJECT_ID/gcpdevops-BRANCH_NAME'
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 60
      restartPolicy: OnFailure

---

apiVersion: v1
kind: Service
metadata:
  name: gcp-devops-gke-service
  namespace: gcp-devops-BRANCH_NAME
  # labels:
  #   app.kubernetes.io/managed-by: gcp-cloud-build-deploy
spec:
  selector:
    app: gcp
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000

---

apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - timeapp-BRANCH_NAME.omkarsathe.com

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: managed-cert-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: BRANCH_NAME
    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: gcp-devops-gke-service
      port:
        number: 80